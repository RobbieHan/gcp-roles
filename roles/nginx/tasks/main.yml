---
- name: Install base packages
  yum: name={{ item }} state=latest
  with_items:
    - gcc 
    - automake
    - autoconf
    - libtool
    - make 
    - gcc-c++ 
    - pcre-devel
    - zlib-devel
    - openssl-devel
    - wget 
 
- name: create nginx user
  user: name={{ nginx_user }} shell=/user/bin/false
   
- name: download nginx
  get_url:
    url: "{{ download_url }}/nginx-{{nginx_version}}.tar.gz"
    dest: "{{ download_dir }}" 

- name: Unarchive nginx
  unarchive: 
    src: "{{ download_dir }}/nginx-{{ nginx_version }}.tar.gz"
    dest: "{{ download_dir }}"
    copy: no 

- name: Copy nginx install script
  template: src=nginx_install.j2 dest=/tmp/nginx_install.sh mode=0744

- name: Copy sites.sh to /usr/bin
  template: src=sites.sh.j2 dest=/usr/bin/sites.sh mode=0744

- name: Install nginx
  shell: "/bin/bash /tmp/nginx_install.sh"
  register: nginx_install_result

- name: Template multi files for NGINX
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'api_acl.conf.j2', dest: '{{ install_dir }}/conf/api_acl.conf' }
    - { src: 'nginx.conf.j2', dest: '{{ install_dir }}/conf/nginx.conf' }
    - { src: 'stream.conf.j2', dest: '{{ install_dir }}/conf/stream.conf' }
    - { src: 'upstream.conf.j2', dest: '{{ install_dir }}/conf/upstream.conf' }
    - { src: 'nginx_logrotate.j2', dest: '/etc/logrotate.d/nginx' }

- name: Create directory {sites-available,sites-enabled} for NGINX
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ install_dir }}/conf/sites-available"
    - "{{ install_dir }}/conf/sites-enabled"
